<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board_mapper">
	<select id="getBoardCategoryInfo" parameterType="java.lang.Integer" resultType="com.test.beans.BoardCategoryBean">
		select board_category_idx, board_category_name from board_category_table where board_category_idx = #{board_category_idx} 
	</select>
	<select id="getContentList" parameterType="java.lang.Integer" resultType="com.test.beans.ContentBean">
		select a1.content_idx, a1.content_ip, a1.content_status, a1.content_date, a1.content_subject, a1.content_read_cnt, a1.content_text,
			   a2.user_id as content_writer_id, a2.user_grade as content_writer_grade, 
			   (select count(*) from like_table where like_content_idx=a1.content_idx) as content_like_cnt,
			   (select count(*) from comment_table where comment_content_idx=a1.content_idx) as content_comment_cnt
		from content_table a1, user_table a2
		where content_board_category_idx=#{board_category_idx} and a1.content_status=1 and a1.content_writer_idx=a2.user_idx
		order by content_idx desc
	</select>
	<select id="getContentListLike" parameterType="java.lang.Integer" resultType="com.test.beans.ContentBean">
		select a1.content_idx, a1.content_ip, a1.content_status, a1.content_date, a1.content_subject, a1.content_read_cnt, a1.content_text,
			   a2.user_id as content_writer_id, a2.user_grade as content_writer_grade, 
			   (select count(*) from like_table where like_content_idx=a1.content_idx) as content_like_cnt,
			   (select count(*) from comment_table where comment_content_idx=a1.content_idx) as content_comment_cnt
		from content_table a1, user_table a2
		where content_board_category_idx=#{board_category_idx} and a1.content_status=1 and a1.content_writer_idx=a2.user_idx
		order by content_like_cnt desc
	</select>
	<select id="getContentCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select count(*) as from content_table 
		where content_board_category_idx=#{board_category_idx} and content_status=1
	</select>	
	<select id="getContent" parameterType="java.lang.Integer" resultType="com.test.beans.ContentBean" >
		select a1.content_idx, a1.content_status, to_char(a1.content_date,'YYYY-MM-DD HH:MI:SS')as content_date, a1.content_subject,
			   a1.content_writer_idx, a1.content_read_cnt,
			   a1.content_board_category_idx, a1.content_text,
			   a2.user_id as content_writer_id,
			   (select count(*) from like_table where like_content_idx=a1.content_idx and like_or_dislike=1) as content_like_cnt,
			   (select count(*) from like_table where like_content_idx=a1.content_idx and like_or_dislike=2) as content_dislike_cnt,
			   (select count(*) from comment_table where comment_content_idx=a1.content_idx)as content_comment_cnt
	 	from content_table a1, user_table a2
	 	where content_idx = #{content_idx} and a1.content_writer_idx=a2.user_idx
	</select>
	<update id="incrementReadCnt" parameterType="java.lang.Integer">
		update content_table set content_read_cnt = content_read_cnt+1 where content_idx = #{content_idx}
	</update>
	<insert id="addContent" parameterType="com.test.beans.ContentBean">		
		<!-- 이 쿼리문을 통해서 구한 값은 넘겨받은 bean 객체의 프로로퍼티에 주입된다. -->
		<selectKey keyProperty="content_idx" order="BEFORE" resultType="java.lang.Integer">
			select content_seq.nextval from dual
		</selectKey>	
		insert into content_table
			(content_idx, content_ip, content_status,content_date,content_subject,content_writer_idx,
			content_read_cnt,content_board_category_idx, content_text)
		values(#{content_idx}, #{content_ip}, 1, sysdate, #{content_subject}, #{content_writer_idx},
				0, #{content_board_category_idx}, #{content_text})
	</insert>
	<select id="checkLike" parameterType="com.test.beans.LikeBean" resultType="com.test.beans.LikeBean">
		select * from like_table where like_user_idx=#{like_user_idx} and like_content_idx=#{like_content_idx}
	</select>
	<insert id="addLike" parameterType="com.test.beans.LikeBean">
		insert into like_table (LIKE_IDX,LIKE_IP,LIKE_DATE,LIKE_STATUS,LIKE_OR_DISLIKE,LIKE_CONTENT_IDX,LIKE_USER_IDX)
		values(like_seq.nextval,#{like_ip}, sysdate, 1,#{like_or_dislike}, #{like_content_idx},#{like_user_idx})
	</insert>
	<delete id="removeLike" parameterType="com.test.beans.LikeBean">
		delete from like_table where like_content_idx=#{like_content_idx} and like_user_idx=#{like_user_idx}
	</delete>	
	<select id="getCommentList" parameterType="java.lang.Integer" resultType="com.test.beans.CommentBean">
		select a1.comment_idx, a1.comment_ip, a1.comment_date, a1.comment_status, 
		a1.comment_text, a1.comment_content_idx, a1.comment_user_idx, a2.user_id as comment_user_id
		from comment_table a1, user_table a2
		where comment_content_idx = #{content_idx} and a1.comment_user_idx=a2.user_idx order by a1.comment_idx desc
	</select>	
	<insert id="addComment" parameterType="com.test.beans.CommentBean">
		insert into comment_table (COMMENT_IDX,COMMENT_IP,COMMENT_DATE,COMMENT_STATUS,COMMENT_TEXT,COMMENT_CONTENT_IDX,COMMENT_USER_IDX)
		values(comment_seq.nextval,'0.0.0.0',sysdate,1,#{comment_text},#{comment_content_idx},#{comment_user_idx})
	</insert>	
	<select id="checkRemoveComment" parameterType="com.test.beans.CommentBean" resultType="com.test.beans.CommentBean">
		select * from comment_table where comment_idx=#{comment_idx} and comment_user_idx=#{comment_user_idx}
	</select>
	<delete id="removeComment" parameterType="com.test.beans.CommentBean">		
		delete from comment_table where comment_idx=#{comment_idx} and comment_user_idx=#{comment_user_idx}
	</delete>
	
	
</mapper>